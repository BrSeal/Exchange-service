{"version":3,"sources":["./src/app/auth/guard.guard.ts","./src/app/services/exchange.service.ts","./src/app/services/rating.service.ts","./src/app/services/stats.service.ts","./src/environments/environment.ts","./src/app/components/statistics/users-list/users-list.component.ts","./src/app/components/statistics/users-list/users-list.component.html","./src/app/services/resources.service.ts","./src/app/components/statistics/exchange-table/exchange-table.component.ts","./src/app/components/statistics/exchange-table/exchange-table.component.html","./src/app/services/exchange-rates.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/app.module.ts","./src/app/components/registration/registration.component.ts","./src/app/components/registration/registration.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/components/rating/rating.component.ts","./src/app/components/rating/rating.component.html","./src/app/services/auth.service.ts","./src/app/app-routing.module.ts","./src/app/common/exchange-rate.ts","./src/app/components/exchange-rates/exchange-rates.component.ts","./src/app/components/exchange-rates/exchange-rates.component.html","./src/app/components/statistics/statistics.component.ts","./src/app/components/statistics/statistics.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree} from '@angular/router';\r\nimport {Observable} from 'rxjs';\r\nimport {AuthService} from \"../services/auth.service\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GuardGuard implements CanActivate {\r\n\r\n  constructor(private authService :AuthService) { }\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    return this.authService.isAuth();\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {AuthService} from \"./auth.service\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ExchangeService {\r\n\r\n  private exchangeUrl = \"http://localhost:8080/exchange\";\r\n\r\n  constructor(private httpClient: HttpClient,\r\n              private authService: AuthService,) {\r\n  }\r\n\r\n  doExchange({amount, from, to}): Observable<ExchangeResult> {\r\n    return this.httpClient.post<ExchangeResult>(\r\n      this.exchangeUrl,\r\n      {from, to, amount},\r\n      this.authService.getHeaders()\r\n    );\r\n  }\r\n}\r\n\r\nexport interface ExchangeResult {\r\n  exchangeId: number,\r\n  amount: number\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {AuthService} from \"./auth.service\";\r\nimport {Observable} from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RatingService {\r\n  private ratingUrl = 'http://localhost:8080/rating';\r\n\r\n  constructor(private httpClient:HttpClient,\r\n              private authService:AuthService) { }\r\n\r\n  getRatingList():Observable<Rating[]>{\r\n    return  this.httpClient.get<Rating[]>(this.ratingUrl, this.authService.getHeaders());\r\n  }\r\n}\r\n\r\nexport interface Rating {\r\n  frequency:number;\r\n  from:string;\r\n  to:string;\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {AuthService} from \"./auth.service\";\r\nimport {StatsRequest, StatsResponse} from \"../components/statistics/statistics.component\";\r\nimport {Observable} from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StatsService {\r\n\r\n  private statsUrl = \"http://localhost:8080/stats\"\r\n\r\n  constructor(private httpClient: HttpClient,\r\n              private authService: AuthService) {\r\n  }\r\n\r\n  getStats(request?: StatsRequest): Observable<StatsResponse> {\r\n    let params = {\r\n      ...this.authService.getHeaders(),\r\n      params: request||{}\r\n    }\r\n    // @ts-ignore\r\n    return this.httpClient.get<StatsResponse>(this.statsUrl, params);\r\n  }\r\n}\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Component, Input, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-users-list',\r\n  templateUrl: './users-list.component.html',\r\n  styleUrls: ['./users-list.component.css']\r\n})\r\nexport class UsersListComponent implements OnInit {\r\n  @Input() usernames:string[];\r\n  @Input() label:string;\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<h3>{{label}}</h3>\r\n<ul *ngIf=\"usernames.length!==0\">\r\n  <li *ngFor=\"let name of usernames\">{{name}}</li>\r\n</ul>\r\n<h2 *ngIf=\"usernames.length===0\">No users found</h2>\r\n","import { Injectable } from '@angular/core';\nimport {Exchange} from \"../components/statistics/statistics.component\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ResourcesService {\n\n  exchanges:Exchange[];\n  exchangedMany: string[];\n  moreThanAtOnes: string[];\n  moreThan:number;\n  total:number;\n  myExchanges:boolean;\n\n  constructor() {\n  }\n\n  setDefault():void{\n    this.exchanges=[];\n    this.exchangedMany=[];\n    this.moreThanAtOnes=[];\n    this.moreThan=0;\n    this.total=0;\n    this.myExchanges=true;\n  }\n}\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {Exchange, StatsResponse} from \"../statistics.component\";\r\nimport {ResourcesService} from \"../../../services/resources.service\";\r\nimport {StatsService} from \"../../../services/stats.service\";\r\n\r\n@Component({\r\n  selector: 'app-exchange-table',\r\n  templateUrl: './exchange-table.component.html',\r\n  styleUrls: ['./exchange-table.component.css']\r\n})\r\nexport class ExchangeTableComponent implements OnInit {\r\n\r\n  exchanges:Exchange[];\r\n\r\n  constructor(private res:ResourcesService,\r\n              private statsService:StatsService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.statsService.getStats().subscribe(data=>this.exchanges=data.myExchanges);\r\n  }\r\n}\r\n","<h2>My exchanges</h2>\r\n<table *ngIf=\"exchanges.length!=0\" class=\"table table-hover col-6 col-sm-3\">\r\n  <thead class=\"thead-dark\">\r\n  <tr>\r\n    <th scope=\"col\">id</th>\r\n    <th scope=\"col\">user</th>\r\n    <th scope=\"col\">from</th>\r\n    <th scope=\"col\">to</th>\r\n    <th scope=\"col\">operationDate</th>\r\n    <th scope=\"col\">amount</th>\r\n    <th scope=\"col\">resultingAmount</th>\r\n  </tr>\r\n  </thead>\r\n\r\n  <tbody>\r\n  <tr *ngFor=\"let exchange of exchanges\">\r\n    <td>{{exchange.id}}</td>\r\n    <td>{{exchange.user}}</td>\r\n    <td>{{exchange.from}}</td>\r\n    <td>{{exchange.to}}</td>\r\n    <td>{{exchange.operationDate}}</td>\r\n    <td>{{exchange.amount}}</td>\r\n    <td>{{exchange.resultingAmount}}</td>\r\n  </tr>\r\n  </tbody>\r\n</table>\r\n\r\n<h3 *ngIf=\"exchanges.length===0\">No exchanges done yet</h3>\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\nimport {AuthService} from \"./auth.service\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ExchangeRatesService {\r\n\r\n  private baseUrl = 'http://localhost:8080/rates?base=';\r\n\r\n  constructor(private httpClient:HttpClient,\r\n              private authService:AuthService) { }\r\n\r\n  getExchangeRatesList(base:string):Observable<MapWithBase>{\r\n   return  this.httpClient.get<MapWithBase>(this.baseUrl+base, this.authService.getHeaders());\r\n  }\r\n}\r\n\r\ninterface MapWithBase {\r\n  base:string,\r\n  rates:Map<string, number>\r\n}\r\n","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'exchangeServiceFrontEnd';\r\n}\r\n","\n<app-navbar></app-navbar>\n<router-outlet></router-outlet>\n","import {Component, OnInit} from '@angular/core';\r\nimport {AuthService} from \"../../services/auth.service\";\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  username: string;\r\n  password: string;\r\n\r\n  constructor(private authService:AuthService) { }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  login() {\r\n    this.authService.login({username:this.username,password:this.password});\r\n  }\r\n}\r\n","<form>\r\n  <h2>Login form</h2>\r\n  <div class=\"form-group col-6 col-sm-3\">\r\n    <div class=\"form-group\">\r\n      <label for=\"username\">Login</label>\r\n      <input  class=\"form-control\"  type=\"text\" id=\"username\" [(ngModel)]=\"username\" name=\"username\" required/>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"password\">Password</label>\r\n      <input class=\"form-control\" id=\"password\" type=\"password\" [(ngModel)]=\"password\" name=\"password\" required/>\r\n    </div>\r\n    <button class=\"btn btn-primary\" (click)=\"login()\">Provide login</button>\r\n  </div>\r\n</form>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport {NgModule} from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ExchangeRatesComponent } from './components/exchange-rates/exchange-rates.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport {HttpClientModule} from \"@angular/common/http\";\r\nimport {ExchangeRatesService} from \"./services/exchange-rates.service\";\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { StatisticsComponent } from './components/statistics/statistics.component';\r\nimport {FormsModule} from \"@angular/forms\";\r\nimport { RegistrationComponent } from './components/registration/registration.component';\r\nimport { ExchangeTableComponent } from './components/statistics/exchange-table/exchange-table.component';\r\nimport { UsersListComponent } from './components/statistics/users-list/users-list.component';\r\nimport { RatingComponent } from './components/rating/rating.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ExchangeRatesComponent,\r\n    NavbarComponent,\r\n    LoginComponent,\r\n    StatisticsComponent,\r\n    RegistrationComponent,\r\n    ExchangeTableComponent,\r\n    UsersListComponent,\r\n    RatingComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    FormsModule\r\n  ],\r\n  providers: [ExchangeRatesService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {AuthService} from \"../../services/auth.service\";\r\n\r\n@Component({\r\n  selector: 'app-registration',\r\n  templateUrl: './registration.component.html',\r\n  styleUrls: ['./registration.component.css']\r\n})\r\nexport class RegistrationComponent implements OnInit {\r\n  username: string;\r\n  password: string;\r\n\r\n  constructor(private authService:AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  register() {\r\n    this.authService.register({username:this.username,password:this.password});\r\n  }\r\n}\r\n","\r\n<form>\r\n  <h2>Registration form</h2>\r\n  <div class=\"form-group col-6 col-sm-3\">\r\n    <div class=\"form-group\">\r\n      <label for=\"username\">Login</label>\r\n      <input  class=\"form-control\"  type=\"text\" id=\"username\" [(ngModel)]=\"username\" name=\"username\" required/>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"password\">Password</label>\r\n      <input class=\"form-control\" id=\"password\" type=\"password\" [(ngModel)]=\"password\" name=\"password\" required/>\r\n    </div>\r\n    <button class=\"btn btn-primary\" (click)=\"register()\">Register</button>\r\n  </div>\r\n</form>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {AuthService} from \"../../services/auth.service\";\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n  logout(): any{\r\n    this.authService.logout();\r\n  };\r\n\r\n  constructor(private authService:AuthService) {}\r\n\r\n  isAuth():boolean{\r\n    return this.authService.isAuth();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div>\r\n  <nav class=\"navbar navbar-expand-md bg-dark navbar-dark sticky-top\">\r\n    <a class=\"navbar-brand\" href=\"#\">Exchange Service</a>\r\n    <div id=\"navb\" class=\"navbar-collapse collapse hide\">\r\n      <ul class=\"navbar-nav\">\r\n        <li><a routerLink=\"/getRates\" routerLinkActive=\"active\">Rates</a></li>\r\n        <li *ngIf=\"isAuth()\"><a routerLink=\"/getStats\" routerLinkActive=\"active\">Statistics</a></li>\r\n        <li *ngIf=\"isAuth()\"><a routerLink=\"/getRatings\" routerLinkActive=\"active\">Exchange rating</a></li>\r\n      </ul>\r\n    </div>\r\n    <div *ngIf=\"!isAuth()\" class=\"btn-group btn-group-toggle pull-right\" data-toggle=\"buttons\">\r\n        <a  class=\"btn btn-info\" routerLink=\"/registration\" routerLinkActive=\"active\">Register</a>\r\n        <a  class=\"btn btn-info\" routerLink=\"/loginForm\" routerLinkActive=\"active\">Log In</a>\r\n    </div>\r\n\r\n    <button *ngIf=\"isAuth()\" class=\"btn btn-info pull-right\" (click)=\"logout()\">Log Out</button>\r\n\r\n  </nav>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {Rating, RatingService} from \"../../services/rating.service\";\r\n\r\n@Component({\r\n  selector: 'app-rating',\r\n  templateUrl: './rating.component.html',\r\n  styleUrls: ['./rating.component.css']\r\n})\r\nexport class RatingComponent implements OnInit {\r\n\r\n  rating:Rating[];\r\n\r\n  constructor(\r\n    private ratingService:RatingService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.ratingService.getRatingList().subscribe(data=>{\r\n      this.rating=data;\r\n    });\r\n  }\r\n}\r\n","<h2>Exchanges</h2>\r\n<table class=\"table table-hover col-6 col-sm-3\">\r\n  <thead class=\"thead-dark\">\r\n  <tr>\r\n    <th scope=\"col\">From</th>\r\n    <th scope=\"col\">To</th>\r\n    <th scope=\"col\">Frequency</th>\r\n  </tr>\r\n  </thead>\r\n  <tbody>\r\n  <tr *ngFor=\"let rate of rating\">\r\n    <td>{{rate.from}}</td>\r\n    <td>{{rate.to}}</td>\r\n    <td>{{rate.frequency}}</td>\r\n  </tr>\r\n  </tbody>\r\n</table>\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\r\nimport {Router} from \"@angular/router\";\r\nimport {Observable} from \"rxjs\";\r\nimport {ResourcesService} from \"./resources.service\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  private authUrl = \"http://localhost:8080/authenticate\";\r\n  private rolesUrl = \"http://localhost:8080/user/roles\";\r\n  private logoutUrl = \"http://localhost:8080/logout\";\r\n  private registerUrl = \"http://localhost:8080/register\";\r\n\r\n  private httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    })\r\n  }\r\n\r\n  public roles: string[];\r\n\r\n\r\n  constructor(private httpClient: HttpClient,\r\n              private router: Router,\r\n              private res:ResourcesService) {\r\n    this.roles = [];\r\n  }\r\n\r\n  getHeaders(): HttpOptions {\r\n    return this.httpOptions;\r\n  }\r\n\r\n  login({username, password}) {\r\n    this.httpClient.post(this.authUrl, {username, password})\r\n      .subscribe(data => {\r\n        this.httpOptions.headers = this.httpOptions.headers.set(\"token\", \"Bearer_\" + data[\"token\"]);\r\n        this.getRoles().subscribe(roles => {\r\n            this.roles = roles;\r\n            this.router.navigate(['/getRates'])\r\n          })\r\n      },error => alert(\"Wrong username or password!\"));\r\n  }\r\n\r\n  logout() {\r\n    this.httpClient.post(this.logoutUrl, null, this.httpOptions);\r\n    this.roles = [];\r\n    this.httpOptions.headers = this.httpOptions.headers.delete('token');\r\n    this.res.setDefault();\r\n    this.router.navigate([\"/loginForm\"]);\r\n  }\r\n\r\n  getRoles(): Observable<string[]> {\r\n    return this.httpClient.get<string[]>(this.rolesUrl, this.httpOptions);\r\n  }\r\n\r\n  isAuth(): boolean {\r\n    return Boolean(this.httpOptions.headers.get('token') && this.httpOptions.headers.get('token').length);\r\n  }\r\n\r\n  register({username, password}) {\r\n    this.httpClient.post(this.registerUrl, {username, password}, {responseType: 'text'})\r\n      .subscribe(() => {\r\n          this.router.navigate([\"/loginForm\"]);\r\n        },\r\n        () => alert(\"Username is already taken or invalid!\"));\r\n  }\r\n}\r\n\r\ninterface HttpOptions {\r\n  headers: HttpHeaders;\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from \"@angular/router\";\r\nimport {ExchangeRatesComponent} from \"./components/exchange-rates/exchange-rates.component\";\r\nimport {LoginComponent} from \"./components/login/login.component\";\r\nimport {StatisticsComponent} from \"./components/statistics/statistics.component\";\r\nimport {GuardGuard} from \"./auth/guard.guard\";\r\nimport {RegistrationComponent} from \"./components/registration/registration.component\";\r\nimport {RatingComponent} from \"./components/rating/rating.component\";\r\nimport {ExchangeTableComponent} from \"./components/statistics/exchange-table/exchange-table.component\";\r\nimport {UsersListComponent} from \"./components/statistics/users-list/users-list.component\";\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: ExchangeRatesComponent},\r\n  {path: 'getRates', component: ExchangeRatesComponent},\r\n  {path: 'getStats', component: StatisticsComponent, canActivate: [GuardGuard]},\r\n  {path: 'loginForm', component: LoginComponent},\r\n  {path: 'registration', component: RegistrationComponent},\r\n  {path: 'getRatings', component: RatingComponent},\r\n  {path: 'myExchanges', component: ExchangeTableComponent},\r\n  {path: 'findUsers', component: UsersListComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  providers: [GuardGuard],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class AppRoutingModule {\r\n}\r\n","export class ExchangeRate {\n  constructor(public base:string,\n              public rate:number) {\n  }\n}\n","import {Component, OnInit} from '@angular/core';\r\nimport {ExchangeRatesService} from \"../../services/exchange-rates.service\";\r\nimport {ExchangeRate} from \"../../common/exchange-rate\";\r\nimport {AuthService} from \"../../services/auth.service\";\r\nimport {ExchangeService} from \"../../services/exchange.service\";\r\n\r\n@Component({\r\n  selector: 'app-exchange-rates',\r\n  templateUrl: './exchange-rates.component.html',\r\n  styleUrls: ['./exchange-rates.component.css']\r\n})\r\nexport class ExchangeRatesComponent implements OnInit {\r\n  rates: ExchangeRate[];\r\n  currentBase: string;\r\n  to: string;\r\n  amount: number;\r\n\r\n  constructor(private ratesService: ExchangeRatesService,\r\n              private exchangeService:ExchangeService,\r\n              private authService: AuthService) {\r\n    this.currentBase = \"usd\"\r\n    this.rates = [];\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.listRates();\r\n  }\r\n\r\n  listRates() {\r\n    this.ratesService.getExchangeRatesList(this.currentBase).subscribe(\r\n      data => {\r\n        let rates = [];\r\n        Object.keys(data.rates).forEach(k => rates.push(new ExchangeRate(k, data.rates[k])));\r\n        this.rates=rates.sort((a,b)=>a.base<b.base?-1:1)\r\n      }, error => alert(error.message));\r\n  }\r\n\r\n  isAuth() {\r\n    return this.authService.isAuth();\r\n  }\r\n\r\n  doExchange() {\r\n    this.exchangeService.doExchange({amount:this.amount,from:this.currentBase,to:this.to})\r\n      .subscribe(data=>alert(\"Exchange id: \"+data.exchangeId+\"\\nResulting amount: \"+data.amount),\r\n        error => alert(\"Something gone horribly wrong!!!\"))\r\n  }\r\n}\r\n","<div>\r\n  <div *ngIf=\"!isAuth()\" class=\"form-group col-6 col-sm-3\">\r\n    <label for=\"baseSelect\">Change base</label>\r\n    <select class=\"form-control\" [(ngModel)]=\"currentBase\" id=\"baseSelect\" (change)=\"listRates()\">\r\n      <option *ngFor=\"let exchangeRate of rates\" [ngValue]=\"exchangeRate.base\">\r\n        {{exchangeRate.base}}\r\n      </option>\r\n    </select>\r\n  </div>\r\n\r\n  <div *ngIf=\"isAuth()\" class=\"form-group col-6 col-sm-3\">\r\n    <label for=\"from\">Exchange from</label>\r\n    <select class=\"form-control\" [(ngModel)]=\"currentBase\" id=\"from\" (change)=\"listRates()\">\r\n      <option *ngFor=\"let exchangeRate of rates\">\r\n        {{exchangeRate.base}}\r\n      </option>\r\n    </select>\r\n    <label for=\"to\">Exchange to</label>\r\n    <select class=\"form-control\" [(ngModel)]=\"to\" id=\"to\">\r\n      <option *ngFor=\"let exchangeRate of rates\">\r\n        {{exchangeRate.base}}\r\n      </option>\r\n    </select>\r\n    <label for=\"amount\">Amount</label>\r\n    <input class=\"form-control\" type=\"number\" [(ngModel)]=\"amount\" id=\"amount\">\r\n\r\n    <input type=\"button\" class=\"btn btn-primary\" value=\"Submit\" (click)=\"doExchange()\">\r\n  </div>\r\n\r\n</div>\r\n\r\n<div>\r\n  <h2>Base:{{currentBase}}</h2>\r\n  <table class=\"table table-hover col-6 col-sm-3\">\r\n    <thead class=\"thead-dark\">\r\n    <tr>\r\n      <th scope=\"col\">Base</th>\r\n      <th scope=\"col\">Rate</th>\r\n    </tr>\r\n    </thead>\r\n    <tbody>\r\n    <tr *ngFor=\"let exchangeRate of rates\">\r\n      <td>{{exchangeRate.base}}</td>\r\n      <td>{{1 / exchangeRate.rate|currency:currentBase}}</td>\r\n    </tr>\r\n\r\n    </tbody>\r\n\r\n  </table>\r\n</div>\r\n","import {Component, OnInit, Output} from '@angular/core';\r\nimport {AuthService} from \"../../services/auth.service\";\r\nimport {StatsService} from \"../../services/stats.service\";\r\n\r\n@Component({\r\n  selector: 'app-statistics',\r\n  templateUrl: './statistics.component.html',\r\n  styleUrls: ['./statistics.component.css']\r\n})\r\nexport class StatisticsComponent implements OnInit {\r\n  roles: string[]\r\n  request: StatsRequest;\r\n  usernames: string[]\r\n  total = 0;\r\n  ones =0;\r\n  label: string;\r\n\r\n  constructor(\r\n    private statsService: StatsService,\r\n    private authService: AuthService) {\r\n    this.roles = [];\r\n  }\r\n\r\n  getRoles(): string[] {\r\n    return this.roles;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.authService.getRoles().subscribe(d => this.roles = d);\r\n  }\r\n\r\n  showMoreThanInTotal() {\r\n    this.statsService.getStats({moreThanInTotal: this.total,moreThanAtOnes:0})\r\n      .subscribe(data => {\r\n        this.label=\"Show users who exchanged more than \"+this.total+\" in total\";\r\n        this.usernames = data.exchangedMany;\r\n      });\r\n  }\r\n\r\n  showMoreThanAtOnes() {\r\n    this.statsService.getStats({moreThanAtOnes: this.ones,moreThanInTotal:0})\r\n      .subscribe(data => {\r\n        this.label=\"Show users who exchanged more than \"+this.ones+\" at ones\";\r\n        this.usernames = data.moreThanAtOnes;\r\n      });\r\n\r\n  }\r\n}\r\n\r\nexport interface StatsResponse {\r\n  myExchanges: Exchange[];\r\n  exchangedMany: string[];\r\n  moreThanAtOnes: string[];\r\n}\r\n\r\nexport interface StatsRequest {\r\n  moreThanInTotal: number;\r\n  moreThanAtOnes: number;\r\n}\r\n\r\nexport interface Exchange {\r\n  id: number;\r\n  user: string;\r\n  from: string;\r\n  to: string;\r\n  operationDate: Date\r\n  amount: number;\r\n  resultingAmount: number;\r\n}\r\n","<div *ngIf=\"getRoles().indexOf('ROLE_ADMIN')!==-1\" class=\"formControl\">\r\n  <div style=\"display: flex;\">\r\n  <input type=\"number\" [(ngModel)]=\"total\" name=\"total\">\r\n  <button class=\"btn btn-info\" (click)=\"showMoreThanInTotal()\">Show users who exchanged more than {{total}} in total\r\n  </button>\r\n  </div>\r\n  <div style=\"display: flex;\">\r\n    <input type=\"number\" [(ngModel)]=\"ones\" name=\"ones\">\r\n  <button class=\"btn btn-info\" (click)=\"showMoreThanAtOnes()\">Show users who exchanged more than {{ones}} at ones\r\n  </button>\r\n  </div>\r\n</div>\r\n<div style=\"display: flex;\">\r\n  <app-exchange-table></app-exchange-table>\r\n  <app-users-list [usernames]=\"usernames\" [label]=\"label\"></app-users-list>\r\n</div>\r\n","import {enableProdMode} from '@angular/core';\r\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\r\n\r\nimport {AppModule} from './app/app.module';\r\nimport {environment} from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}